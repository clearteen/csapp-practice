This is an x86-64 bomb for self-study students. 

/***************************************************************************
 * Dr. Evil의 악랄한 폭탄, 버전 1.1
 * 저작권 2011, Dr. Evil Incorporated. 모든 권리 보유.
 *
 * 라이선스:
 *
 * Dr. Evil Incorporated(가해자)는 폭탄(BOMB)을 사용할 수 있는 명시적
 * 권한을 피해자(VICTIM)에게 부여합니다. 이 라이선스는 피해자의 죽음과 
 * 동시에 만료되는 시간 제한 라이선스입니다.
 * 가해자는 피해자에게 발생하는 손해, 좌절감, 정신 이상, 눈의 충혈, 
 * 수근관 증후군, 수면 부족 또는 기타 피해에 대해 책임지지 않습니다. 
 * 물론 가해자가 그 공을 가로채고 싶지 않은 경우에 한합니다. 
 * 피해자는 이 폭탄 소스 코드를 가해자의 적에게 배포할 수 없습니다. 
 * 어떤 피해자도 폭탄을 디버그, 리버스 엔지니어링, "strings" 명령 실행, 
 * 디컴파일, 복호화 또는 기타 방법을 사용하여 폭탄의 지식을 얻거나 
 * 해제할 수 없습니다. 이 프로그램을 다룰 때는 방폭 의류를 착용할 수 
 * 없습니다. 가해자는 가해자의 유머 감각 부족에 대해 사과하지 않습니다. 
 * 이 라이선스는 법률에 의해 폭탄이 금지된 곳에서는 무효입니다.
 ***************************************************************************/

#include <stdio.h>
#include <stdlib.h>
#include "support.h"
#include "phases.h"

/* 
 * 메모: 이 파일을 지워서 피해자들이 무슨 일이 일어나고 있는지 전혀
 * 모르게 하고, 모두가 끔찍한 폭발로 터지게 해야지. -- Dr. Evil 
 */

FILE *infile;

int main(int argc, char *argv[])
{
    char *input;

    /* 메모: 이 폭탄을 윈도우로 이식하고 멋진 GUI를 추가해야지. */

    /* 인수가 없이 실행되면, 폭탄은 표준 입력에서 입력 줄을 읽습니다. */
    if (argc == 1) {  
	infile = stdin;
    } 

    /* 하나의 인수 <file>로 실행되면, 폭탄은 EOF까지 <file>에서 읽고,
     * 그 후 표준 입력으로 전환합니다. 따라서 각 단계를 해제할 때마다 
     * 해제 문자열을 <file>에 추가하여 다시 입력할 필요가 없습니다. */
    else if (argc == 2) {
	if (!(infile = fopen(argv[1], "r"))) {
	    printf("%s: Error: Couldn't open %s\n", argv[0], argv[1]);
	    exit(8);
	}
    }

    /* 한 개 이상의 명령줄 인수로 폭탄을 호출할 수 없습니다. */
    else {
	printf("Usage: %s [<input_file>]\n", argv[0]);
	exit(8);
    }

    /* 폭탄을 해제하기 어렵게 만드는 온갖 비밀 작업들을 수행합니다. */
    initialize_bomb();

    printf("Welcome to my fiendish little bomb. You have 6 phases with\n");
    printf("which to blow yourself up. Have a nice day!\n");

    /* 음... 여섯 단계가 한 단계보다 더 안전하겠지! */
    input = read_line();             /* 입력 줄을 읽어들임 */
    phase_1(input);                  /* 첫 번째 단계를 실행 */
    phase_defused();                 /* 첫 번째 단계를 해제
				      * 어떻게 해제했는지 알려주시오. */
    printf("Phase 1 defused. How about the next one?\n");

    /* 두 번째 단계는 더 어렵습니다. 아무도 이 단계를 해제할 수 없을 것입니다... */
    input = read_line();
    phase_2(input);
    phase_defused();
    printf("That's number 2.  Keep going!\n");

    /* 이제 절반 정도 왔습니다! */
    input = read_line();
    phase_3(input);
    phase_defused();
    printf("Halfway there!\n");

    /* 수학은 얼마나 잘하시나요? 이 까다로운 문제를 풀어보세요! */
    input = read_line();
    phase_4(input);
    phase_defused();
    printf("So you got that one.  Try this one.\n");
    
    /* 메모리를 이리저리 돌아다니다 보면 폭탄이 터질 겁니다! */
    input = read_line();
    phase_5(input);
    phase_defused();
    printf("Good work!  On to the next...\n");

    /* 이 단계는 아무도 통과하지 못할 것입니다. 하지만 혹시 모르니, 
     * 이 단계를 더욱 어렵게 만들어야겠군요. */
    input = read_line();
    phase_6(input);
    phase_defused();

    /* 와, 해냈군요! 하지만 뭔가... 빠진 건 아닌가요? 아마도 뭔가 
     * 간과했을 것입니다? 무하하하하하! */
    
    return 0;
}
